name: Check and Deploy library to Maven Central

on:
  push:
    branches:
      - pre-release

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up JDK 21
        uses: actions/setup-java@v5.0.0
        with:
          distribution: temurin
          java-version: 21
          cache: maven
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Show project version
        id: project_version
        run: |
           echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Debug GPG
        run: |
          echo "=== Listing GPG secret keys ==="
          gpg --list-secret-keys --keyid-format LONG || true
          echo "=== Listing GPG public keys ==="
          gpg --list-keys --keyid-format LONG || true

      - name: Configure Maven settings
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                        https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>central</id>
                <username>${MAVEN_USERNAME}</username>
                <password>${MAVEN_PASSWORD}</password>
              </server>
            </servers>
          </settings>
          EOF
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

      - name: Deploy to Maven Central
        run: mvn clean deploy --batch-mode
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Configure Git
        run: |
          git config user.name "TDMinhNhat [Auto]"
          git config user.email "tdminhnhat13092003@gmail.com"

      - name: Fetch all branches
        run: git fetch origin

      - name: Merge pre-release -> main
        run: |
          git checkout main
          git merge --no-ff origin/pre-release -m "Auto-merge pre-release into main"
          git push origin main
